// Block grids
// ===========

$columns: 6 !default;

@mixin block-grids($max, $prefix: '', $postfix: '') {
  %#{$prefix}block-grid#{$postfix} {
    @extend %unstyled-list;
    margin-left: size(spacing)/-2;
    margin-right: size(spacing)/-2;

    @include compact;

    > * {
      display: inline-block;
      margin-top: size(spacing);
      padding-left: size(spacing)/2;
      padding-right: size(spacing)/2;
      vertical-align: top;
    }

    &.has-border {
      > * + * {
        border-image-slice: 1;
        border-image-source: linear-gradient(to bottom, rgba($pack-border-color, 0) 0%, rgba($pack-border-color, 0.15) 50%, rgba($pack-border-color, 0) 100%);
        border-style: solid;
        border-width: 0 0 0 $pack-border-width;
      }
    }

    &.is-tight {
      > * {
        margin-top: size(spacing)/2;
      }
    }

    &.has-centered-items {
      > * {
        vertical-align: middle;
      }
    }
  }

  @for $num from 1 through $max {
    .#{$prefix}block-grid-#{$num}#{$postfix} {
      @extend %#{$prefix}block-grid#{$postfix};

      > * {
        width: percentage(1/$num);

        @for $f from 1 through $num {
          &:nth-child(#{$f}) {
            margin-top: 0;
          }
        }
      }

      &.has-border {
        > * + :nth-child(n) {
          border-left-width: $pack-border-width;
        }
        @include new-row($num) {
          border-left-width: 0;
        }
      }
    }
  }
}

@include block-grids($columns);

@each $name, $query in $breakpoints {
  @include query($name) {
    @include block-grids($columns, $postfix: '\\@'+$name);
  }
}
