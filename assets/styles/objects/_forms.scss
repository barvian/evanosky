// Forms
// =====

$form-or-color: lighten($light, 10%) !default;
$form-multistep-transition-duration: 250ms !default;

.form {
  &__errors {
    background-color: lighten($red, 45%);
    border: 1px solid $red;
    color: darken($red, 20%);
    display: block;
    padding: size(base);

    &:empty {
      display: none;

      @include trailing(0);
    }

    @include trailing;
  }

  &__completed, &__fatal {
    padding: size(big);
    text-align: center;

    > .sprite {
      animation: bounceIn 1s linear 1 normal both;
      border: 3px solid currentColor;
      border-radius: 100%;
      display: inline-block;
      fill: currentColor;
      height: 5rem;
      padding: 1rem;
      width: 5rem;

      @include query(alpha) {
        border-width: 5px;
        height: 10rem;
        padding: size(spacing);
        width: 10rem;
      }
    }
  }

  &__completed {
    > %heading, > .sprite {
      color: lighten(saturate($purple, 10%), 10%);
    }
  }

  &__item {
    margin-bottom: size(spacing);

    %tick {
      float: left;
      margin-bottom: 0;
      margin-top: 0.45em;

      + label {
        clear: none;
        color: #495357;
        display: block;
        padding-top: 0.25em;
        overflow: hidden;
        text-transform: none;
      }
    }

    &.is-required {
      > label[for], > label > span {
        &::after {
          content: '*';
        }
      }
    }
  }

  &__fields {
    @extend .layout;
    @extend %unstyled-list;

    margin-left: -$gutter;
    margin-right: -$gutter;

    @include compact;

    > li {
      @extend %clearfix;
      @extend .layout__unit;
      @extend .form__item;
    }

    + button, + input[type="submit"], + %link {
      margin-top: 0.75rem;
    }
  }

  &__options {
    @extend %unstyled-list;

      margin-left: -1/2*size(spacing);
      margin-top: -1/2*size(spacing);

    @include compact;

    > li {
      display: inline-block;
      margin-left: size(spacing) / 2;
      margin-top: size(spacing) / 2;
    }
  }

  &__choices {
    > :not(.form__or) {
      opacity: 1;
      transition: opacity 225ms ease-in-out;
    }

    &.has-choice {
      > :not(.form__or):not(.has-focus) {
        opacity: 0.5;
      }
    }
  }

  &__or {
    color: $form-or-color;
    padding-left: size(spacing);
    padding-right: size(spacing);
    position: relative;

    @include font($serif, $style: italic);

    &::before, &::after {
      content: '';
      left: 50%;
      margin-left: -1px;
      position: absolute;
      width: 1px;
    }

    &::before {
      background-image: linear-gradient(to top, rgba($form-or-color, 0.5), rgba($form-or-color, 0));
      bottom: 50%;
      margin-bottom: 0.75em;
      top: 0;
    }

    &::after {
      background-image: linear-gradient(to bottom, rgba($form-or-color, 0.5), rgba($form-or-color, 0));
      bottom: 0;
      margin-top: 0.75em;
      top: 50%;
    }
  }

  &--multistep {
    .form__steps {
      [class^="is-animating"], &[class*=" is-animating"] {
        transition: height $form-multistep-transition-duration linear;
      }

      overflow: hidden;
      margin-left: size(spacing) * -1;
      margin-right: size(spacing) * -1;
      padding-left: size(spacing);
      padding-right: size(spacing);
      white-space: nowrap;

      @include compact;

      > fieldset {
        animation-duration: $form-multistep-transition-duration;
        animation-fill-mode: both;
        animation-timing-function: linear;
        display: inline-block;
        position: relative;
        vertical-align: top;
        white-space: normal;

        + fieldset {
          border-top: none;
          padding-top: 0;
        }

        &.is-inactive:not([class^="is-animating"]):not([class*=" is-animating"]) {
          @include hidden;
        }

        &.is-animating-forward {
          &:not(.is-inactive) { animation-name: fadeInRightSmall; left: -100%; }
          &.is-inactive { animation-name: fadeOutLeftSmall; }
        }

        &.is-animating-backward {
          &:not(.is-inactive) { animation-name: fadeInLeftSmall; }
          &.is-inactive { animation-name: fadeOutRightSmall; left: -100%; }
        }
      }
    }

    .form__nav {
      align-items: center;
      display: flex;
      justify-content: space-between;

      @include compact;

      &::after {
        background-color: $hr-color;
        height: $hr-size;
        content: '';
        flex: 1;
      }
    }

    .form__prev {
      @extend %unstyled-button;

      animation: fadeInRightSmall $form-multistep-transition-duration linear 1 normal both;
      color: darken($hr-color, 30%);
      overflow: hidden;
      margin-right: 1em;
      max-height: 2em;
      max-width: 100%;
      transition: all $form-multistep-transition-duration linear;
      white-space: nowrap;

      @include font($sans, $size: base, $weight: semibold);
      @include query(alpha) {
        max-width: 50%;
      }

      &::before {
        content: '<';
        display: inline-block;
        margin-right: 0.25em;
        vertical-align: top;
      }

      &:empty, &.is-inactive {
        margin-right: 0;
        max-width: 0;
        max-height: 0;
      }

      &:empty {
        animation: none;
      }

      &.is-inactive {
        animation: fadeOutRightSmall $form-multistep-transition-duration linear 1 normal both;
      }
    }
  }
}
